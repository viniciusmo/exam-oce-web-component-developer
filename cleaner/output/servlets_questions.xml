<questoes><questao><alternativas><alternativa id='a'><![CDATA[ Servlet]]></alternativa><alternativa id='b'><![CDATA[ HttpServlet]]></alternativa><alternativa id='c'><![CDATA[ ServletRequest]]></alternativa><alternativa id='d'><![CDATA[ HttpServletRequest]]></alternativa><corretas>a,c,d</corretas></alternativas><pergunta><![CDATA[ Which of the following are interfaces? (3 correct answers)
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Servlet]]></alternativa><alternativa id='b'><![CDATA[ HttpServlet]]></alternativa><alternativa id='c'><![CDATA[ GenericServlet]]></alternativa><alternativa id='d'><![CDATA[ HttpServletRequest]]></alternativa><corretas>b,c</corretas></alternativas><pergunta><![CDATA[ Which of the following are abstract classes? (2 correct answers)
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ HttpServlet extends GenericServlet that implements Servlet.]]></alternativa><alternativa id='b'><![CDATA[ HttpServlet extends GenericServlet that extends Servlet.]]></alternativa><alternativa id='c'><![CDATA[ HttpServlet implements GenericServlet that extends Servlet.]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ Which of the following statements is true? (1 correct answer)
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ HttpServlet IS-A GenericServlet.]]></alternativa><alternativa id='b'><![CDATA[ HttpServlet IS-A Servlet.]]></alternativa><alternativa id='c'><![CDATA[ HttpServlet IS-A ServletRequest.]]></alternativa><corretas>a,b</corretas></alternativas><pergunta><![CDATA[ Which of the following statements are true? (2 correct answers)
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Calls the void service(HttpServletRequest, HttpServletResponse) method of the servlet.]]></alternativa><alternativa id='b'><![CDATA[ Creates a pair of request and response objects.]]></alternativa><alternativa id='c'><![CDATA[ Finds the correct servlet based on the URL.]]></alternativa><alternativa id='d'><![CDATA[ Creates a new thread or allocates an existing thread to the client’s request.]]></alternativa><corretas>b,c,d,a</corretas></alternativas><pergunta><![CDATA[ Here are some actions taken by the Container when a client request arrives. Place them in the correct order starting from what happens first.
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ getServletConfig();]]></alternativa><alternativa id='b'><![CDATA[ request.getServletConfig();]]></alternativa><alternativa id='c'><![CDATA[ response.getServletConfig();]]></alternativa><alternativa id='d'><![CDATA[ getServletContext().getServletConfig();]]></alternativa><alternativa id='e'><![CDATA[ request.getSession().getServletConfig();]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ How can a servlet access it’s associated ServletConfig object? (1 correct answer)
        
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ getServletContext();]]></alternativa><alternativa id='b'><![CDATA[ request.getServletContext();]]></alternativa><alternativa id='c'><![CDATA[ response.getServletContext();]]></alternativa><alternativa id='d'><![CDATA[ getServletConfig().getServletContext();]]></alternativa><alternativa id='e'><![CDATA[ request.getSession().getServletContext();]]></alternativa><corretas>a,d,e</corretas></alternativas><pergunta><![CDATA[ How can a servlet access the application’s ServletContext object? (3 correct answers)
        
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ request.getRequestDispatcher().forward(“hello.jsp”);]]></alternativa><alternativa id='b'><![CDATA[ request.getRequestDispatcher().dispatch(“hello.jsp”);]]></alternativa><alternativa id='c'><![CDATA[ request.getRequestDispatcher(“hello.jsp”).forward(request, response);]]></alternativa><alternativa id='d'><![CDATA[ request.getRequestDispatcher(“hello.jsp”).dispatch(request, response);]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ How is a request dispatchedto hello.jsp from a doGet() method? (1 correct answer)
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ request.redirect(“hello.jsp”);]]></alternativa><alternativa id='b'><![CDATA[ response.redirect(“hello.jsp”);]]></alternativa><alternativa id='c'><![CDATA[ request.sendRedirect(“hello.jsp”);]]></alternativa><alternativa id='d'><![CDATA[ response.sendRedirect(“hello.jsp”);]]></alternativa><corretas>d</corretas></alternativas><pergunta><![CDATA[ How is a request redirectedto hello.jsp from a doGet() method? (1 correct answer)
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ true]]></alternativa><alternativa id='b'><![CDATA[ false]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ Dispatching a request occurs on the server-side and redirection on the client-side. (1 correct answer)
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ true]]></alternativa><alternativa id='b'><![CDATA[ false]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ Both context init parameters and servlet init parameters are declared in the web.xml. (1 correct answer)
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ true]]></alternativa><alternativa id='b'><![CDATA[ false]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ The value of a servlet init parameter can be changed programmatically, but the value of a context init parameter cannot. (1 correct answer)
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ true]]></alternativa><alternativa id='b'><![CDATA[ false]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ A context init parameter cannot have the same name with a servlet init parameter. (1 correct answer)
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ true]]></alternativa><alternativa id='b'><![CDATA[ false]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ A servlet init parameter cannot have the same name with the servlet it refers to. (1 correct answer)
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ In the ServletConfig object of the servlet.]]></alternativa><alternativa id='b'><![CDATA[ In the ServletContext object of the web application.]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ Where is a servlet init parameter stored after the servlet is initialized and available for use? (1 correct answer)
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ In the ServletConfig object of the servlet.]]></alternativa><alternativa id='b'><![CDATA[ In the ServletContext object of the web application.]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ Where is a context init parameter stored after the servlet is initialized and available for use? (1 correct answer)
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Yes.]]></alternativa><alternativa id='b'><![CDATA[ No, because servlet-name contains a space.]]></alternativa><alternativa id='c'><![CDATA[ No, because servlet-class has a wrong value.]]></alternativa><alternativa id='d'><![CDATA[ No, because param-name is a reserved Java keyword.]]></alternativa><alternativa id='e'><![CDATA[ No, because param-value contains an explanation mark (!).]]></alternativa><alternativa id='f'><![CDATA[ No, because init-param should be inside a servlet-mapping element.]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ Assume the servlet HelloServlet that belongs to package com. The file HelloServlet.class is placed in the directory WEB-INF/classes/com. Is this a correct declaration of an init parameter for this servlet? (1 correct answer)
    
    <servlet>
        <servlet-name>Hello Servlet</servlet-name>
        <servlet-class>classes.com.HelloServlet</servlet-class>
        <init-param>
            <param-name>this</param-name>
            <param-value>Hello!</param-value>
        </init-param>
    </servlet>

        
        
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Compilation fails because there is no init() method defined.]]></alternativa><alternativa id='b'><![CDATA[ An exception is thrown at runtime because service() has no method to call!]]></alternativa><alternativa id='c'><![CDATA[ Deployment succeeds but we get a message “GET is not supported by this URL” if we access it.]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ What happens when we compile and deploy this servlet? (1 correct answer)
    
    public class Test extends HttpServlet {
     
    }

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Compilation fails because there is no init() method defined.]]></alternativa><alternativa id='b'><![CDATA[ An exception is thrown at runtime because the servlet has no modifier.]]></alternativa><alternativa id='c'><![CDATA[ An exception is thrown at runtime because service() has no method to call!]]></alternativa><alternativa id='d'><![CDATA[ Deployment succeeds but we get a message “GET is not supported by this URL” if we try to access its URL.]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ What happens when we compile and deploy this servlet? (1 correct answer)
    
    class Test extends HttpServlet {
     
    }

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Compilation fails because doGet() is empty.]]></alternativa><alternativa id='b'><![CDATA[ An exception is thrown at runtime because doGet() is empty.]]></alternativa><alternativa id='c'><![CDATA[ Deployment succeeds but nothing is displayed to the user’s browser.]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ What happens when this servlet is compiled, deployed and called? (1 correct answer)
    
    public class Test extends HttpServlet {
        public void doGet(HttpServletRequest request,
                          HttpServletResponse response)
                          throws ServletException, IOException {
            // TODO
        }
    }

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Compilation fails because doGet() must be void.]]></alternativa><alternativa id='b'><![CDATA[ Deployment succeeds but nothing is displayed to the user’s browser.]]></alternativa><alternativa id='c'><![CDATA[ A NullPointerException is thrown at runtime because null is returned.]]></alternativa><alternativa id='d'><![CDATA[ A ServletException is thrown at runtime because service() cannot find the proper doGet() method.]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ What happens when this servlet is compiled, deployed and called? (1 correct answer)
    
    public class Test extends HttpServlet {
    public String doGet(HttpServletRequest request,
                        HttpServletResponse response)
                        throws ServletException, IOException {
            // TODO
        return null;
    }
    }

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Compilation fails because doGet() is protected.]]></alternativa><alternativa id='b'><![CDATA[ Compilation fails because doGet() does not declare a ServletException.]]></alternativa><alternativa id='c'><![CDATA[ Deployment succeeds and clients are served just fine.]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ What happens when this servlet is compiled and deployed? (1 correct answer)
    
    public class Test extends HttpServlet {
    protected void doGet(HttpServletRequest request,
                         HttpServletResponse response)
                         throws IOException {
        response.setContentType("text/html; charset=UTF-8");
        PrintWriter out = response.getWriter();
        out.println("<html><body>");
        out.println("<p>Hello!!</p>");
        out.println("</body></html>");
        out.close();
    }
    }

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ An exception is thrown at runtime because the Container cannot modify the request and response objects.]]></alternativa><alternativa id='b'><![CDATA[ An exception is thrown at runtime when the out object is closed.]]></alternativa><alternativa id='c'><![CDATA[ Deployment succeeds and clients are served just fine.]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ What happens when this servlet is deployed and called? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void doGet(final HttpServletRequest request,
                      final HttpServletResponse response)
                      throws IOException, ServletException {
        response.setContentType("text/html; charset=UTF-8");
        final PrintWriter out = response.getWriter();
        out.println("<html><body>");
        out.println("<p>Hello!!</p>");
        out.println("</body></html>");
        out.close();
    }
    }

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ A ServletException is thrown at runtime because the <html> and <body> tags are missing.]]></alternativa><alternativa id='b'><![CDATA[ Deployment succeeds and Hello!! is presented on the browser.]]></alternativa><alternativa id='c'><![CDATA[ The server responds with a HTTP status code 404: “Not Found”.]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ What happens when this servlet is deployed and called? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.setContentType("text/html; charset=UTF-8");
        PrintWriter out = response.getWriter();
        // out.println("<html><body>");
        out.println("<p>Hello!!</p>");
        // out.println("</body></html>");
        out.close();
    }
    }

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Deployment succeeds and Hello!! is presented on the browser.]]></alternativa><alternativa id='b'><![CDATA[ Compilation fails because the content type should be specified before any output is written.]]></alternativa><alternativa id='c'><![CDATA[ An exception is thrown at runtime because the response has not an explicitly set content type.]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ What happens when this servlet is compiled, deployed and called? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        // response.setContentType("text/html; charset=UTF-8");
        PrintWriter out = response.getWriter();
        out.println("<html><body>Hello!!</body></html>");
        out.close();
    }
    }

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ An exception is thrown at runtime because out is not closed.]]></alternativa><alternativa id='b'><![CDATA[ Deployment succeeds and Hello!! is presented on the browser.]]></alternativa><alternativa id='c'><![CDATA[ Deployment succeeds but no output is presented on the browser.]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ What happens when this servlet is compiled, deployed and called? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.setContentType("text/html; charset=UTF-8");
        PrintWriter out = response.getWriter();
        out.println("<html><body>Hello!!</body></html>");
        // out.close();
    }
    }

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Compilation succeeds.]]></alternativa><alternativa id='b'><![CDATA[ There is a compilation error at line 4.]]></alternativa><alternativa id='c'><![CDATA[ There is a compilation error at line 6.]]></alternativa><alternativa id='d'><![CDATA[ Both lines 4 and 6 contain a compilation error.]]></alternativa><corretas>d</corretas></alternativas><pergunta><![CDATA[ Does this servlet compile successfully? (1 correct answer)
    
    1	public class Test extends HttpServlet {
    2	public void doGet(HttpServletRequest request,
    3	                  HttpServletResponse response)
    4	                  throws Exception {
    5	    response.setContentType("text/html; charset=UTF-8");
    6	    response.getWriter().println("Hello!!").close();
    7	}
    8	}

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Compilation succeeds.]]></alternativa><alternativa id='b'><![CDATA[ Compilation fails because there is no init(ServletConfig) in GenericServlet.]]></alternativa><alternativa id='c'><![CDATA[ Compilation fails because init(ServletConfig) of GenericServlet throws ServletException.]]></alternativa><alternativa id='d'><![CDATA[ Compilation fails because init(ServletConfig) of GenericServlet throws IOException and ServletException.]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ Does this servlet compile successfully? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void init(ServletConfig config) {
        super.init(config);
    }
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.setContentType("text/html; charset=UTF-8");
        PrintWriter out = response.getWriter();
        out.println("<html><body>Hello!</body></html>");
        out.close();
    }
    }

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Compilation succeeds.]]></alternativa><alternativa id='b'><![CDATA[ Compilation fails because index.html is not a jsp.]]></alternativa><alternativa id='c'><![CDATA[ Compilation fails because doGet should declare ServletException as well.]]></alternativa><alternativa id='d'><![CDATA[ Compilation fails because the request object’s reference must be request and not req.]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ Does this servlet compile successfully? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void doGet(HttpServletRequest req,
                      HttpServletResponse response)
                      throws IOException {
        req.getRequestDispatcher("index.html").
            forward(req, response);
    }
    }

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ Compilation succeeds.]]></alternativa><alternativa id='b'><![CDATA[ Compilation fails because index.html is not a jsp.]]></alternativa><alternativa id='c'><![CDATA[ Compilation fails because doGet should declare ServletException as well.]]></alternativa><alternativa id='d'><![CDATA[ Compilation fails because the request object’s reference must be request and not req.]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ Does this servlet compile successfully? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void doGet(HttpServletRequest req,
                      HttpServletResponse response)
                      throws IOException {
        response.sendRedirect("index.html");
    }
    }

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ request.getRequestDispatcher(“hello.jsp”).forward(request, response);]]></alternativa><alternativa id='b'><![CDATA[ request.getRequestDispatcher(“hello.jsp”).forward(response, request);]]></alternativa><alternativa id='c'><![CDATA[ response.getRequestDispatcher(“hello.jsp”).forward(request, response);]]></alternativa><alternativa id='d'><![CDATA[ response.getRequestDispatcher(“hello.jsp”).forward(response, request);]]></alternativa><alternativa id='e'><![CDATA[ None of the above.]]></alternativa><corretas>e</corretas></alternativas><pergunta><![CDATA[ Which of the following statements shoud be inserted for a successful compilation? (1 correct answer)
    
    public class Test extends HttpServlet {
        protected void doGet(HttpServletRequest request,
        HttpServletResponse response) {
            // insert statement
        }
    }

        
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ An IllegalStateException is thrown at runtime because response.getWriter() is called more than once.]]></alternativa><alternativa id='b'><![CDATA[ An IllegalStateException is thrown at runtime at line 5 because the request is dispatched after writing data.]]></alternativa><alternativa id='c'><![CDATA[ An IllegalStateException is thrown at runtime at line 6 because data is written after the request has been dispatched.]]></alternativa><alternativa id='d'><![CDATA[ An IllegalStateException is thrown at runtime at line 7 because the writer is closed after the request has been dispatched.]]></alternativa><alternativa id='e'><![CDATA[ The browser displays the content of hello.jsp without any exception at runtime.]]></alternativa><alternativa id='f'><![CDATA[ The browser displays aa without any exception at runtime.]]></alternativa><alternativa id='g'><![CDATA[ The browser displays a without any exception at runtime.]]></alternativa><corretas>e</corretas></alternativas><pergunta><![CDATA[ What happens when the servlet with the following method is deployed and called? (1 correct answer)
    
    1	public void doGet(HttpServletRequest request,
    2	                  HttpServletResponse response)
    3	                  throws ServletException, IOException {
    4	    response.getWriter().print('a');
    5	    request.getRequestDispatcher("hello.jsp").forward(request, response);
    6	    response.getWriter().print('a');
    7	    response.getWriter().close();
    8	}

        
        
        
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ An exception is thrown at runtime because the provided URL does not start with “/”.]]></alternativa><alternativa id='b'><![CDATA[ Compilation fails because the provided URL does not start with “/”.]]></alternativa><alternativa id='c'><![CDATA[ The browser displays the content of hello.jsp.]]></alternativa><alternativa id='d'><![CDATA[ The browser displays an empty page.]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ What happens when the servlet with the following method is deployed and called? (1 correct answer)
    
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        getServletContext().getRequestDispatcher("hello.jsp")
                           .forward(request, response);
    }

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ An exception is thrown at runtime because the provided URL is absolute.]]></alternativa><alternativa id='b'><![CDATA[ Compilation fails because the provided URL is absolute.]]></alternativa><alternativa id='c'><![CDATA[ The browser displays the content of hello.jsp.]]></alternativa><alternativa id='d'><![CDATA[ The browser displays an empty page.]]></alternativa><corretas>d</corretas></alternativas><pergunta><![CDATA[ What happens when the servlet with the following method is deployed and called? (1 correct answer)
    
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        getServletContext().getRequestDispatcher("/hello.jsp");
    }

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ A NullPointerException occurs at runtime.]]></alternativa><alternativa id='b'><![CDATA[ The browser displays an empty page.]]></alternativa><alternativa id='c'><![CDATA[ The browser displays “null”.]]></alternativa><alternativa id='d'><![CDATA[ The browser displays “ice”.]]></alternativa><alternativa id='e'><![CDATA[ The browser displays “tea”.]]></alternativa><alternativa id='f'><![CDATA[ Compilation fails.]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ A servlet init parameter with name “ice” and value “tea” is properly declared. What is the result of this code? (1 correct answer)
    
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(
            getServletConfig().getInitParameter("tea")
        );
    }

        
        
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ A NullPointerException occurs at runtime.]]></alternativa><alternativa id='b'><![CDATA[ The browser displays an empty page.]]></alternativa><alternativa id='c'><![CDATA[ The browser displays “null”.]]></alternativa><alternativa id='d'><![CDATA[ The browser displays “ice”.]]></alternativa><alternativa id='e'><![CDATA[ The browser displays “tea”.]]></alternativa><alternativa id='f'><![CDATA[ Compilation fails.]]></alternativa><corretas>e</corretas></alternativas><pergunta><![CDATA[ A servlet init parameter with name “ice” and value “tea” is properly declared. What is the result of this code? (1 correct answer)
    
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(getInitParameter("ice"));
    }

        
        
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ A NullPointerException occurs at runtime.]]></alternativa><alternativa id='b'><![CDATA[ The browser displays an empty page.]]></alternativa><alternativa id='c'><![CDATA[ The browser displays “null”.]]></alternativa><alternativa id='d'><![CDATA[ The browser displays “ice”.]]></alternativa><alternativa id='e'><![CDATA[ The browser displays “tea”.]]></alternativa><alternativa id='f'><![CDATA[ Compilation fails.]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ A context init parameter with name “ice” and value “tea” is properly declared. What is the result of this code? (1 correct answer)
    
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(
            getServletContext().getInitParameter("tea")
        );
    }

        
        
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ A NullPointerException occurs at runtime.]]></alternativa><alternativa id='b'><![CDATA[ The browser displays an empty page.]]></alternativa><alternativa id='c'><![CDATA[ The browser displays “null”.]]></alternativa><alternativa id='d'><![CDATA[ The browser displays “ice”.]]></alternativa><alternativa id='e'><![CDATA[ The browser displays “tea”.]]></alternativa><alternativa id='f'><![CDATA[ Compilation fails.]]></alternativa><corretas>f</corretas></alternativas><pergunta><![CDATA[ A context init parameter with name “ice” and value “tea” is properly declared. What is the result of this code? (1 correct answer)
    
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(getContextParameter("ice"));
    }

        
        
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ true]]></alternativa><alternativa id='b'><![CDATA[ false]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ The Container creates a single instance for every servlet. The client requests are served with various threads. (1 correct answer)
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ http://localhost:]]></alternativa><alternativa id='b'><![CDATA[ /test1/processor]]></alternativa><alternativa id='c'><![CDATA[ /processor]]></alternativa><alternativa id='d'><![CDATA[ /test1]]></alternativa><corretas>d</corretas></alternativas><pergunta><![CDATA[ Assume that the container is running on port 9999 of localhost, our application is called test1 and that the following servlet is declared with url pattern /processor. What is the output? (1 correct answer)
    
    public class Processor extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(request.getContextPath());
    }
    }

        9/test1/processor999
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ http://localhost:]]></alternativa><alternativa id='b'><![CDATA[ /test1/processor]]></alternativa><alternativa id='c'><![CDATA[ /processor]]></alternativa><alternativa id='d'><![CDATA[ /test1]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ Assume that the container is running on port 9999 of localhost, our application is called test1 and that the following servlet is declared with url pattern /processor. What is the output? (1 correct answer)
    
    public class Processor extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(request.getServletPath());
    }
    }

        9/test1/processor999
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ http://localhost:]]></alternativa><alternativa id='b'><![CDATA[ /test1/processor]]></alternativa><alternativa id='c'><![CDATA[ /processor]]></alternativa><alternativa id='d'><![CDATA[ /test1]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ Assume that the container is running on port 9999 of localhost, our application is called test1 and that the following servlet is declared with url pattern /processor. What is the output? (1 correct answer)
    
    public class Processor extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(request.getRequestURL());
    }
    }

        9/test1/processor999
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ http://localhost:]]></alternativa><alternativa id='b'><![CDATA[ /test1/processor]]></alternativa><alternativa id='c'><![CDATA[ /processor]]></alternativa><alternativa id='d'><![CDATA[ /test1]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ Assume that the container is running on port 9999 of localhost, our application is called test1 and that the following servlet is declared with url pattern /processor. What is the output? (1 correct answer)
    
    public class Processor extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(request.getRequestURI());
    }
    }

        9/test1/processor999
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ GET]]></alternativa><alternativa id='b'><![CDATA[ POST]]></alternativa><alternativa id='c'><![CDATA[ A HTTP 405 message informs that GET is not supported.]]></alternativa><alternativa id='d'><![CDATA[ A HTTP 405 message informs that POST is not supported.]]></alternativa><corretas>d</corretas></alternativas><pergunta><![CDATA[ Consider this form.
    
    <form method="post" action="processor">
       <input type="submit" value="OK"/>
    </form>

    And this servlet.
    
    public class Processor extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(request.getMethod());
    }
    }

    What is the output when the form is submitted? (1 correct answer)

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ GET]]></alternativa><alternativa id='b'><![CDATA[ POST]]></alternativa><alternativa id='c'><![CDATA[ A HTTP 405 message informs that GET is not supported.]]></alternativa><alternativa id='d'><![CDATA[ A HTTP 405 message informs that POST is not supported.]]></alternativa><corretas>d</corretas></alternativas><pergunta><![CDATA[ Consider this form.
    
    <form method="post" action="processor">
       <input type="submit" value="OK"/>
    </form>

    And this servlet.
    
    public class Processor extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(request.getMethod());
    }
    public void doPost(HttpServletResponse response,
                      HttpServletRequest request)
                      throws ServletException, IOException {
        doGet(request, response);
    }
    }

    What is the output when the form is submitted? (1 correct answer)

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ form OK]]></alternativa><alternativa id='b'><![CDATA[ null OK]]></alternativa><alternativa id='c'><![CDATA[ form null]]></alternativa><alternativa id='d'><![CDATA[ null null]]></alternativa><corretas>d</corretas></alternativas><pergunta><![CDATA[ Consider this form.
    
    <form name="form" method="post" action="processor">
       <input name="submit" type="submit" value="OK"/>
    </form>

    And this servlet.
    
    public class Processor extends HttpServlet {
    public void doPost(HttpServletRequest request,
                       HttpServletResponse response)
                       throws ServletException, IOException {
        response.getWriter().format("%s %s",
        request.getParameter("form"),
        request.getParameter("name"));
    }
    }

    What is the output when the form is submitted? (1 correct answer)

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ form OK]]></alternativa><alternativa id='b'><![CDATA[ null OK]]></alternativa><alternativa id='c'><![CDATA[ form null]]></alternativa><alternativa id='d'><![CDATA[ null null]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ Consider this form.
    
    <form name="form" method="post" action="processor">
       <input name="submit" type="submit" value="OK"/>
    </form>

    And this servlet.
    
    public class Processor extends HttpServlet {
    public void doPost(HttpServletRequest request,
                       HttpServletResponse response)
                       throws ServletException, IOException {
        response.getWriter().format("%s %s",
        request.getParameter("form"),
        request.getParameter("submit"));
    }
    }

    What is the output when the form is submitted? (1 correct answer)

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ OK OK]]></alternativa><alternativa id='b'><![CDATA[ null OK]]></alternativa><alternativa id='c'><![CDATA[ OK null]]></alternativa><alternativa id='d'><![CDATA[ null null]]></alternativa><corretas>c</corretas></alternativas><pergunta><![CDATA[ Consider this form.
    
    <form name="form" method="post" action="processor">
       <input type="text" name="name" value="OK"/>
       <input name="submit" type="submit" value="OK"/>
    </form>

    And this servlet.
    
    public class Processor extends HttpServlet {
    public void doPost(HttpServletRequest request,
                       HttpServletResponse response)
                       throws ServletException, IOException {
        response.getWriter().format("%s %s",
        request.getParameter("name"),
        request.getParameter("OK"));
    }
    }

    What is the output when the form is submitted? (1 correct answer)

        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ http://localhost:]]></alternativa><alternativa id='b'><![CDATA[ http://localhost:]]></alternativa><alternativa id='c'><![CDATA[ null]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ Consider doGet() of a valid servlet with url pattern /source,
    
    request.getRequestDispatcher("target")
           .forward(request, response);

    and doGet() of another valid servlet with url pattern /target.
    
    response.getWriter().println(request.getRequestURL());

    What is the output when invoking http://localhost:9999/exam/source?user=nikos&pass=12345? (1 correct answer)

        9/exam/source999
        9/exam/target999
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ user=nikos&pass=12345]]></alternativa><alternativa id='b'><![CDATA[ null]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ Consider doGet() of a valid servlet with url pattern /source,
    
    request.getRequestDispatcher("target")
           .forward(request, response);

    and doGet() of another valid servlet with url pattern /target.
    
    response.getWriter().println(request.getQueryString());

    What is the output when invoking http://localhost:9999/exam/source?user=nikos&pass=12345? (1 correct answer)

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ user=nikos&pass=12345]]></alternativa><alternativa id='b'><![CDATA[ null]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ Consider doGet() of a valid servlet with url pattern /source,
    
    request.getRequestDispatcher("target")
           .forward(request, response);

    and doGet() of another valid servlet with url pattern /target.
    
    response.getWriter().println(request.getAttribute("javax.servlet.forward.query_string"));

    What is the output when invoking http://localhost:9999/exam/source?user=nikos&pass=12345? (1 correct answer)

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ /source]]></alternativa><alternativa id='b'><![CDATA[ /target]]></alternativa><alternativa id='c'><![CDATA[ null]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ Consider doGet() of a valid servlet with url pattern /source,
    
    request.getRequestDispatcher("target")
           .forward(request, response);

    and doGet() of another valid servlet with url pattern /target.
    
    response.getWriter().println(request.getAttribute("javax.servlet.forward.servlet_path"));

    What is the output when invoking http://localhost:9999/exam/source?user=nikos&pass=12345? (1 correct answer)

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ /source]]></alternativa><alternativa id='b'><![CDATA[ /target]]></alternativa><alternativa id='c'><![CDATA[ null]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ Consider doGet() of a valid servlet with url pattern /source,
    
    request.getRequestDispatcher("target")
           .forward(request, response);

    and doGet() of another valid servlet with url pattern /target.
    
    response.getWriter().println(request.getServletPath());

    What is the output when invoking http://localhost:9999/exam/source?user=nikos&pass=12345? (1 correct answer)

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ 12345]]></alternativa><alternativa id='b'><![CDATA[ null]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ Consider doGet() of a valid servlet with url pattern /source,
    
    request.getRequestDispatcher("target")
           .forward(request, response);

    and doGet() of another valid servlet with url pattern /target.
    
    response.getWriter().println(request.getParameter("pass"));

    What is the output when invoking http://localhost:9999/exam/source?user=nikos&pass=12345? (1 correct answer)

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ 12345]]></alternativa><alternativa id='b'><![CDATA[ null]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ Consider doGet() of a valid servlet with url pattern /source,
    
    response.sendRedirect("target");

    and doGet() of another valid servlet with url pattern /target.
    
    response.getWriter().println(request.getParameter("pass"));

    What is the output when invoking http://localhost:9999/exam/source?user=nikos&pass=12345? (1 correct answer)

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ /source]]></alternativa><alternativa id='b'><![CDATA[ /target]]></alternativa><alternativa id='c'><![CDATA[ null]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ Consider doGet() of a valid servlet with url pattern /source,
    
    response.sendRedirect("target");

    and doGet() of another valid servlet with url pattern /target.
    
    response.getWriter().println(request.getServletPath());

    What is the output when invoking http://localhost:9999/exam/source?user=nikos&pass=12345? (1 correct answer)

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ user=nikos&pass=12345]]></alternativa><alternativa id='b'><![CDATA[ null]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ Consider doGet() of a valid servlet with url pattern /source,
    
    response.sendRedirect("target");

    and doGet() of another valid servlet with url pattern /target.
    
    response.getWriter().println(
        request.getAttribute("javax.servlet.forward.query_string")
    );

    What is the output when invoking http://localhost:9999/exam/source?user=nikos&pass=12345? (1 correct answer)

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ user=nikos&pass=12345]]></alternativa><alternativa id='b'><![CDATA[ null]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ Consider doGet() of a valid servlet with url pattern /source,
    
    response.sendRedirect("target");

    and doGet() of another valid servlet with url pattern /target.
    
    response.getWriter().println(
        request.getQueryString()
    );

    What is the output when invoking http://localhost:9999/exam/source?user=nikos&pass=12345? (1 correct answer)

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ The content of index.html]]></alternativa><alternativa id='b'><![CDATA[ HTTP Status 404]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ There is a top-level folder help in the war file with index.htmlinside. What is the output of this code? (1 correct answer)
    
    request.getRequestDispatcher("help/index.html")
           .forward(request, response);

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ The content of index.html]]></alternativa><alternativa id='b'><![CDATA[ HTTP Status 404]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ There is a top-level folder help in the war file with index.htmlinside. What is the output of this code? (1 correct answer)
    
    request.getRequestDispatcher("/help/index.html")
           .forward(request, response);

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ The content of fcom.gr]]></alternativa><alternativa id='b'><![CDATA[ HTTP Status 404]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ What is the output of this code? (1 correct answer)
    
    request.getRequestDispatcher("http://fcom.gr")
           .forward(request, response);

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ The content of index.html]]></alternativa><alternativa id='b'><![CDATA[ HTTP Status 404]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ There is a top-level folder help in the war file with index.htmlinside. What is the output of this code? (1 correct answer)
    
    response.sendRedirect("help/index.html");

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ The content of index.html]]></alternativa><alternativa id='b'><![CDATA[ HTTP Status 404]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ There is a top-level folder help in the war file with index.htmlinside. What is the output of this code? (1 correct answer)
    
    response.sendRedirect("/help/index.html");

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ The content of fcom.gr]]></alternativa><alternativa id='b'><![CDATA[ HTTP Status 404]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ What is the output of this code? (1 correct answer)
    
    response.sendRedirect("http://fcom.gr");

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ The same value is always displayed.]]></alternativa><alternativa id='b'><![CDATA[ The displayed value increases with every refresh.]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ What happens when this servlet is deployed and a user hits repeatedly the refresh button of his browser? (1 correct answer)
    
    public class Test extends HttpServlet {
    private Integer number = 0;
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        number = number + 1;
        response.getWriter().println(number);
    }
    }

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ The same value is always displayed.]]></alternativa><alternativa id='b'><![CDATA[ The displayed value increases with every refresh.]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ What happens when this servlet is deployed and a user hits repeatedly the refresh button of his browser? (1 correct answer)
    
    public class Test extends HttpServlet {
    private Integer number = new Random().nextInt();
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        response.getWriter().println(number);
    }
    }

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ true]]></alternativa><alternativa id='b'><![CDATA[ false]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ The following types are ALL interfaces and are used as listeners in a web application. (1 correct answer)
    → ServletContextListener
    → ServletContextAttributeListener
    → ServletRequestListener
    → ServletRequestAttributeListener
    → HttpSessionListener
    → HttpSessionBindingListener
    → HttpSessionAttributeListener
    → HttpSessionActivationListener

        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ void contextDeleted(ServletContextEvent)]]></alternativa><alternativa id='b'><![CDATA[ void contextDestroyed(ServletContextEvent)]]></alternativa><alternativa id='c'><![CDATA[ void servletContextDeleted(ServletContextEvent)]]></alternativa><alternativa id='d'><![CDATA[ void servletContextDestroyed(ServletContextEvent)]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ Consider the interface ServletContextListener. What is the signature of the method that is invoked when the servlet context is about to be shut down? (1 correct answer)
        
        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ 0]]></alternativa><alternativa id='b'><![CDATA[ 1]]></alternativa><alternativa id='c'><![CDATA[ 2]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ There is a properly declared HttpSessionAttributeListener. How many times its attributeRemovedmethod is invoked when the following servlet is accessed once? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        request.getSession().setAttribute("planet", "earth");
        request.getSession().removeAttribute("planet");
        request.getSession().removeAttribute("planet");
    }
    }

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ 0]]></alternativa><alternativa id='b'><![CDATA[ 1]]></alternativa><alternativa id='c'><![CDATA[ 2]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ There is a properly declared HttpSessionAttributeListener. How many times its attributeRemovedmethod is invoked when the following servlet is accessed once? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        request.getSession().setAttribute("planet", "earth");
        request.getSession().invalidate();
        request.getSession().removeAttribute("planet");
        request.getSession().setAttribute("planet", "earth");
    }
    }

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ 0]]></alternativa><alternativa id='b'><![CDATA[ 1]]></alternativa><alternativa id='c'><![CDATA[ 2]]></alternativa><corretas>b</corretas></alternativas><pergunta><![CDATA[ There is a properly declared HttpSessionAttributeListener. How many times its attributeReplacedmethod is invoked when the following servlet is accessed once? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        request.getSession().setAttribute("planet", "earth");
        request.getSession().removeAttribute("earth");
        request.getSession().setAttribute("planet", "earth");
    }
    }

        
        
        

]]></pergunta></questao><questao><alternativas><alternativa id='a'><![CDATA[ 0]]></alternativa><alternativa id='b'><![CDATA[ 1]]></alternativa><alternativa id='c'><![CDATA[ 2]]></alternativa><corretas>a</corretas></alternativas><pergunta><![CDATA[ There is a properly declared HttpSessionAttributeListener. How many times its attributeReplacedmethod is invoked when the following servlet is accessed once? (1 correct answer)
    
    public class Test extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
                      throws ServletException, IOException {
        request.getSession().setAttribute("planet", "earth");
        request.getSession().removeAttribute("planet");
        request.getSession().setAttribute("planet", "venus");
        request.setAttribute("planet", "earth");
        request.setAttribute("planet", "venus");
    }
    }

        
        
        

]]></pergunta></questao></questoes>